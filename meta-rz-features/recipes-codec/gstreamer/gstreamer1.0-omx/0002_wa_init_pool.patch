diff --git a/omx/gstomxvideodec.c b/omx/gstomxvideodec.c
index ec3a1c3..922d8bd 100644
--- a/omx/gstomxvideodec.c
+++ b/omx/gstomxvideodec.c
@@ -1924,6 +1924,60 @@ gst_omx_video_dec_loop (GstOMXVideoDec * self)
   }
 
   g_assert (acq_return == GST_OMX_ACQUIRE_BUFFER_OK);
+  
+#if 1 //FIXME. init pool
+	{
+	static gboolean gstpool_init_1st;
+	if(gstpool_init_1st == FALSE){
+		if ((self->no_copy == TRUE) || (self->use_dmabuf == TRUE)) {
+			
+          /* Re-create new out_port_pool. The old one has been freed when
+           * deallocate output buffers */
+			self->out_port_pool =
+				gst_omx_buffer_pool_new (GST_ELEMENT_CAST (self), self->dec, self->dec_out_port,
+				self->dmabuf ? GST_OMX_BUFFER_MODE_DMABUF :
+				GST_OMX_BUFFER_MODE_SYSTEM_MEMORY);
+						
+			if (gst_pad_has_current_caps (GST_VIDEO_DECODER_SRC_PAD (self))){
+				GstStructure *config;
+				gboolean add_videometa = FALSE;
+				GstCaps *caps = NULL;
+								
+				caps = gst_pad_get_current_caps (GST_VIDEO_DECODER_SRC_PAD (self));
+				config = gst_buffer_pool_get_config (self->out_port_pool);
+				
+				add_videometa = gst_buffer_pool_config_has_option (config,
+				GST_BUFFER_POOL_OPTION_VIDEO_META);
+				if (add_videometa)
+					gst_buffer_pool_config_add_option (config,
+						GST_BUFFER_POOL_OPTION_VIDEO_META);
+				
+				gst_buffer_pool_config_set_params (config, caps,
+					self->dec_out_port->port_def.nBufferSize,
+					self->dec_out_port->port_def.nBufferCountActual,
+					self->dec_out_port->port_def.nBufferCountActual); 
+					
+				gst_caps_unref (caps);
+							
+				if (!gst_buffer_pool_set_config (self->out_port_pool, config)) {
+					GST_INFO_OBJECT (self, "Failed to set config on internal pool");
+					gst_object_unref (self->out_port_pool);
+					self->out_port_pool = NULL;
+					goto reconfigure_error;
+				}
+			
+				/* This now allocates all the buffers */
+				if (!gst_buffer_pool_set_active (self->out_port_pool, TRUE)) {
+					GST_INFO_OBJECT (self, "Failed to activate internal pool");
+					gst_object_unref (self->out_port_pool);
+					self->out_port_pool = NULL;
+				} 
+			}
+		}
+	}
+	gstpool_init_1st = TRUE;
+	}
+#endif 
 
   /* This prevents a deadlock between the srcpad stream
    * lock and the videocodec stream lock, if ::reset()
